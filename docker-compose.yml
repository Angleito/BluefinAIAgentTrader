version: '3.8'

services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    restart: unless-stopped

  ngrok:
    image: ngrok/ngrok:alpine
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    ports:
      - "4040:4040"
    depends_on:
      - nginx
    command: http --domain=${NGROK_DOMAIN:-} nginx:80
    restart: unless-stopped

  webhook:
    build: .
    volumes:
      - ./:/app
      - ./logs:/app/logs
      - ./alerts:/app/alerts
      - ./.env:/app/.env
    environment:
      - WEBHOOK_PORT=5001
      - FLASK_ENV=production
    command: python webhook_server.py
    restart: unless-stopped
    ports:
      - "5001:5001"

  agent:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - PERPLEXITY_API_LIMIT=200  # Double the default limit
      - PERPLEXITY_MODEL=${PERPLEXITY_MODEL:-sonar-reasoning-pro}
      - BLUEFIN_API_KEY=${BLUEFIN_API_KEY}  
      - BLUEFIN_API_SECRET=${BLUEFIN_API_SECRET}
      - BLUEFIN_NETWORK=${BLUEFIN_NETWORK}
      - BLUEFIN_PRIVATE_KEY=${BLUEFIN_PRIVATE_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3.7-sonnet}
      - CLAUDE_TEMPERATURE=${CLAUDE_TEMPERATURE:-0.2}
      - DEFAULT_SYMBOL=${DEFAULT_SYMBOL:-SUI/USD}
      - DEFAULT_TIMEFRAME=${DEFAULT_TIMEFRAME:-5m}
      - DEFAULT_LEVERAGE=${DEFAULT_LEVERAGE:-5}
      - DEFAULT_POSITION_SIZE_PCT=${DEFAULT_POSITION_SIZE_PCT:-0.05}
      - DEFAULT_STOP_LOSS_PCT=${DEFAULT_STOP_LOSS_PCT:-0.15}
      - DEFAULT_MAX_POSITIONS=${DEFAULT_MAX_POSITIONS:-3}
      - MOCK_TRADING=False
    volumes:
      - ./logs:/app/logs
      - ./alerts:/app/alerts  
    restart: always
    ports:
      - "5000:5000"  # For the control API
    depends_on:
      - webhook 
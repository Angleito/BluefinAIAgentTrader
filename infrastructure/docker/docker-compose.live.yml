version: '3'

services:
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    ports:
      - "8080:80"
    restart: always
    depends_on:
      - webhook
      - agent

  frontend:
    image: node:18-alpine
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: sh -c "npm install && npm run build"
    environment:
      - NODE_ENV=production

  ngrok:
    image: ngrok/ngrok:latest
    command: http nginx:80
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - nginx
    restart: always

  webhook:
    build: .
    ports:
      - "5001:5001"
    volumes:
      - ./alerts:/app/alerts
      - ./logs:/app/logs
      - ./screenshots:/app/screenshots
    env_file:
      - .env
    restart: always
    command: ["python", "webhook_server.py"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  agent:
    build: 
      context: .
      dockerfile: Dockerfile.agent
    environment:
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - PERPLEXITY_API_LIMIT=200
      - PERPLEXITY_MODEL=${PERPLEXITY_MODEL:-sonar-reasoning-pro}
      - BLUEFIN_API_KEY=${BLUEFIN_API_KEY}  
      - BLUEFIN_API_SECRET=${BLUEFIN_API_SECRET}
      - BLUEFIN_NETWORK=${BLUEFIN_NETWORK}
      - BLUEFIN_PRIVATE_KEY=${BLUEFIN_PRIVATE_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_MODEL=${CLAUDE_MODEL:-claude-3.7-sonnet}
      - CLAUDE_TEMPERATURE=${CLAUDE_TEMPERATURE:-0.2}
      - DEFAULT_SYMBOL=${DEFAULT_SYMBOL:-SUI/USD}
      - DEFAULT_TIMEFRAME=${DEFAULT_TIMEFRAME:-5m}
      - DEFAULT_LEVERAGE=${DEFAULT_LEVERAGE:-5}
      - DEFAULT_POSITION_SIZE_PCT=${DEFAULT_POSITION_SIZE_PCT:-0.05}
      - DEFAULT_STOP_LOSS_PCT=${DEFAULT_STOP_LOSS_PCT:-0.15}
      - DEFAULT_MAX_POSITIONS=${DEFAULT_MAX_POSITIONS:-3}
      - MOCK_TRADING=False
      - PORT=5002
    volumes:
      - ./logs:/app/logs
      - ./alerts:/app/alerts  
      - ./screenshots:/app/screenshots
      - ./analysis:/app/analysis
    restart: always
    ports:
      - "5002:5002"
    depends_on:
      - webhook
    command: ["python", "agent.py"]
    shm_size: 1gb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/status"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 20s
      
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 86400
    restart: always 
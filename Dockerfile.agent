# Use Python 3.10 as the base image
FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    cron \
    procps \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements.txt
COPY requirements.txt .

# Install aiohttp and its dependencies first
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir aiohttp==3.8.5 \
    aiosignal==1.3.1 \
    async-timeout==4.0.3 \
    attrs==23.2.0 \
    frozenlist==1.4.1 \
    multidict==6.0.5 \
    yarl==1.9.4

# Install Python dependencies directly
RUN pip install --no-cache-dir flask==2.0.1 werkzeug==2.0.3 && \
    pip install --no-cache-dir -r requirements.txt

# Verify aiohttp installation
RUN python -c "import aiohttp; print(f'aiohttp version: {aiohttp.__version__}')"

# Install playwright browsers
RUN playwright install --with-deps chromium

# Create necessary directories
RUN mkdir -p logs alerts screenshots analysis

# Copy application code
COPY core/ ./core/
COPY api/ ./api/
COPY *.py ./
COPY config/ ./config/
COPY check_services.sh ./
COPY check_services_docker.sh ./
COPY start_services.sh ./
COPY stop_services.sh ./

# Make scripts executable
RUN chmod +x *.sh

# Set up cron job to check services every 5 minutes
RUN echo "*/5 * * * * /app/check_services_docker.sh >> /app/logs/cron.log 2>&1" > /etc/cron.d/service-check \
    && chmod 0644 /etc/cron.d/service-check \
    && crontab /etc/cron.d/service-check

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    FLASK_APP=agent.py \
    FLASK_ENV=production \
    FLASK_DEBUG=false \
    PORT=5002 \
    MOCK_TRADING=False \
    PYTHONPATH=/app

# Expose the agent port
EXPOSE 5002

# Create entrypoint script with better error checking
RUN echo '#!/bin/bash\necho "Current directory: $(pwd)"\necho "Python path: $PYTHONPATH"\necho "Python executable: $(which python)"\necho "Python version: $(python --version)"\necho "Listing installed packages:"\npython -m pip list\necho "Checking for aiohttp:"\npython -c "try: import aiohttp; print(\"aiohttp version:\", aiohttp.__version__); except ImportError as e: print(\"Error importing aiohttp:\", e)"\necho "Checking for Flask:"\npython -c "try: import flask; print(\"Flask version:\", flask.__version__); except ImportError as e: print(\"Error importing Flask:\", e)"\nservice cron start\nexec "$@"' > /app/entrypoint.sh \
    && chmod +x /app/entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]

# Run the agent
CMD ["python", "agent.py"] 
version: '3.8'

services:
  # Nginx service for frontend and reverse proxy
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/build:/usr/share/nginx/html:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - websocket
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - frontend-network

  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: perplexitytrader-backend:latest
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - PORT=5000
    ports:
      - "5000:5000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - frontend-network
      - backend-network
    command: ["python", "app.py"]

  # WebSocket service
  websocket:
    build:
      context: .
      dockerfile: Dockerfile
    image: perplexitytrader-websocket:latest
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - SOCKET_PORT=5001
    ports:
      - "5001:5001"
    restart: always
    networks:
      - frontend-network
      - backend-network
    command: ["python", "websocket_server.py"]

  # Webhook service
  webhook:
    build:
      context: .
      dockerfile: Dockerfile
    image: perplexitytrader-webhook:latest
    volumes:
      - ./logs:/app/logs
      - ./alerts:/app/alerts
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - WEBHOOK_PORT=8000
    ports:
      - "8000:8000"
    restart: always
    networks:
      - backend-network
    command: ["python", "webhook_server.py"]

  # Trading agent service
  agent:
    build:
      context: .
      dockerfile: Dockerfile
    image: perplexitytrader-agent:latest
    volumes:
      - ./logs:/app/logs
      - ./alerts:/app/alerts
      - ./config:/app/config
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - MOCK_TRADING=${MOCK_TRADING:-False}
    restart: always
    depends_on:
      - backend
      - webhook
    networks:
      - backend-network
    command: ["python", "agent.py"]
    shm_size: 1gb

  # Optional: Ngrok service for exposing webhook to the internet
  ngrok:
    image: ngrok/ngrok:latest
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: http webhook:8000
    depends_on:
      - webhook
    restart: unless-stopped
    networks:
      - backend-network
    profiles:
      - with-ngrok

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge

volumes:
  logs:
  config:
  data:
  alerts: 
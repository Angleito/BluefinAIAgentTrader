[project]
name = "browser-use"
description = "Make websites accessible for AI agents"
authors = [{ name = "Gregor Zunic" }]
version = "0.1.40"
readme = "README.md"
requires-python = ">=3.11,<4.0"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "httpx>=0.27.2",
    "pydantic>=2.10.4",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "posthog>=3.7.0",
    "playwright>=1.49.0",
    "setuptools>=75.8.0",
    # "lmnr[langchain]>=0.4.59",
    "markdownify==0.14.1",
    "langchain-core>=0.3.35",
    "langchain-openai==0.3.1",
    "langchain-anthropic==0.3.3",
    "langchain-ollama==0.2.2",
]
urls = { "Repository" = "https://github.com/browser-use/browser-use" }

[project.optional-dependencies]
dev = [
    "tokencost>=0.1.16",
    "hatch>=1.13.0",
    "build>=1.2.2",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "fastapi>=0.115.8",
    "inngest>=0.4.19",
    "uvicorn>=0.34.0",
    "langchain>=0.3.18",
    "langchain-aws>=0.2.11",
    "langchain-fireworks>=0.2.6",
    "langchain-google-genai==2.0.8",
]

[tool.ruff]
line-length = 130
select = ["E", "F", "I"]
fix = true

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
authors = []
license = { text = "MIT" }
requires-python = "<4.0,>=3.9"
dependencies = []
name = "langchain-monorepo"
version = "0.0.1"
description = "LangChain mono-repo"
readme = "README.md"

[project.urls]
repository = "https://www.github.com/langchain-ai/langchain"

[dependency-groups]
lint = ["ruff<1.0.0,>=0.5.0"]
dev = [
    "langchain-core",
    "langchain-text-splitters",
    "langchain-community",
    "langchain",
    "langchain-openai",
    "ipykernel<7.0.0,>=6.29.2",
]
codespell = ["codespell<3.0.0,>=2.2.0"]
typing = []
test = [
    "langchain-experimental @ git+https://github.com/langchain-ai/langchain-experimental.git#subdirectory=libs/experimental",
    "langchain-anthropic",
    "langchain-aws @ git+https://github.com/langchain-ai/langchain-aws.git#subdirectory=libs/aws",
    "langchain-chroma",
    "langchain-fireworks",
    "langchain-google-vertexai @ git+https://github.com/langchain-ai/langchain-google.git#subdirectory=libs/vertexai",
    "langchain-groq",
    "langchain-mistralai",
    "langchain-together @ git+https://github.com/langchain-ai/langchain-together.git#subdirectory=libs/together",
    "langchain-unstructured @ git+https://github.com/langchain-ai/langchain-unstructured.git#subdirectory=libs/unstructured",
    "langgraph",
    "jupyter<2.0.0,>=1.1.1",
    "click<9.0.0,>=8.1.7",
    "aiofiles<25.0.0,>=24.1.0",
    "faiss-cpu<2.0.0,>=1.7.4",
    "grandalf<1.0,>=0.8",
    "lark<2.0.0,>=1.1.9",
    "pandas<3,>=2",
    "rank-bm25<1.0.0,>=0.2.2",
    "tabulate<1.0.0,>=0.9.0",
    "unstructured[md]<1.0.0,>=0.16.11; python_version < \"3.13\"",
    "wikipedia<2.0.0,>=1.4.0",
    "pypdf<6.0.0,>=5.0.0",
    "vcrpy<7.0.0,>=6.0.1",
]

[tool.uv.sources]
langchain-core = { path = "./libs/core", editable = true }
langchain-text-splitters = { path = "./libs/text-splitters", editable = true }
langchain-tests = { path = "./libs/standard-tests", editable = true }
langchain-community = { path = "./libs/community", editable = true }
langchain = { path = "./libs/langchain", editable = true }
langchain-openai = { path = "./libs/partners/openai", editable = true }
langchain-anthropic = { path = "./libs/partners/anthropic", editable = true }
langchain-chroma = { path = "./libs/partners/chroma", editable = true }
langchain-fireworks = { path = "./libs/partners/fireworks", editable = true }
langchain-groq = { path = "./libs/partners/groq", editable = true }
langchain-mistralai = { path = "./libs/partners/mistralai", editable = true }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.codespell]
skip = '.git,*.pdf,*.svg,*.pdf,*.yaml,*.ipynb,poetry.lock,*.min.js,*.css,package-lock.json,example_data,_dist,examples,templates,*.trig'
# Ignore latin etc
ignore-regex = '.*(Stati Uniti|Tense=Pres).*'
# whats is a typo but used frequently in queries so kept as is
# aapply - async apply
# unsecure - typo but part of API, decided to not bother for now
ignore-words-list = 'momento,collison,ned,foor,reworkd,parth,whats,aapply,mysogyny,unsecure,damon,crate,aadd,symbl,precesses,accademia,nin,cann'

[tool.ruff]
extend-include = ["*.ipynb"]
extend-exclude = [
    "docs/docs/expression_language/why.ipynb", # TODO: look into why linter errors
]

[tool.ruff.lint]
select = ["D"]
pydocstyle = { convention = "google" }

[tool.ruff.lint.per-file-ignores]
"**/{cookbook,docs}/*" = [
    "E402", # allow imports to appear anywhere in docs
    "F401", # allow "imported but unused" example code
    "F811", # allow re-importing the same module, so that cells can stay independent
    "F841", # allow assignments to variables that are never read -- it's example code

]
"!libs/langchain/langchain/model_laboratory.py" = ["D"]

# These files were failing the listed rules at the time ruff was adopted for notebooks.
# Don't require them to change at once, though we should look into them eventually.
"cookbook/gymnasium_agent_simulation.ipynb" = ["F821"]
"docs/docs/integrations/document_loaders/tensorflow_datasets.ipynb" = ["F821"]

[tool.poetry]
name = "perpleixtytrader"
version = "0.1.0"
description = "A project description"
authors = ["Your Name <your.email@example.com>"]

[tool.poetry.dependencies]
python = "^3.9"
browser-use = "^0.1.0"
langchain = "^0.1.0"
python-dotenv = "^0.19.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"